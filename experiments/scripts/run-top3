#!/bin/bash

# Main script for generating data for the memshare paper. Runs the top 3
# apps under a massive number of configurations. Most of the plots of the
# paper are generated from this data.
#
# The other main script in the one that runs the top 20.

source scripts/top-apps
apps="$top3"
source scripts/app-sizes

# Run all of the apps together in a single slab cache.
./lsm-sim \
  -a $app_lst \
  -p multislab \
  -M \
  -s $total_size \
  -S $((1024 * 1024)) \
  -f ./data/m.cap.out \
      2> err-top3-managed-multislab-greedy.log \
      > temp-multislab-greedy.data &
pids="$pids $!"
wait_too_many

# Run all of the apps together in a single LSC cache with various policies.
for subpolicy in greedy static; do
  ./lsm-sim \
    -a $app_lst \
    -p multi \
    -E $subpolicy \
    -c 50 \
    -s $total_size \
    -S $((1024 * 1024)) \
    -f ./data/m.cap.out \
        2> err-top3-managed-multi-$subpolicy.log \
        > top3-managed-multi-$subpolicy.data &
  pids="$pids $!"
  wait_too_many
done 

for private in 0 25 50 75 100; do
  ./lsm-sim \
    -a $app_lst \
    -p multi \
    -E normal \
    -c 50 \
    -N $private \
    -s $total_size \
    -S $((1024 * 1024)) \
    -f ./data/m.cap.out \
        2> err-top3-managed-multi-normal-$private-private.log \
        > top3-managed-multi-normal-$private-private.data &
  pids="$pids $!"
  wait_too_many
done 

# Run each app in isolation with memcachier's slab setup.
for app in $apps; do
  ./lsm-sim \
    -a $app \
    -p multislab \
    -M \
    -s ${memcachier_app_size[$app]} \
    -S $((1024 * 1024)) \
    -f ./data/app${app} \
        2> err-top3-managed-multislab-static-app$app.log \
        > temp-multislab-static-app$app.data &
  pids="$pids $!"
  wait_too_many
done 

wait $pids

sed 's/multislab/slab-greedy/g' \
  < temp-multislab-greedy.data \
  > top3-managed-multislab-greedy.data
rm temp-multislab-greedy.data

for app in $apps; do
  sed 's/multislab/slab-static/g' \
    < temp-multislab-static-app$app.data \
    > top3-managed-multislab-static-app$app.data
  rm temp-multislab-static-app$app.data
done 

cat top3-managed-*.data > t
awk '/^time/ { if (head == 0) { print $0; head = 1; }; next; } { print $0; }' < t > top3-managed.data
rm t top3-managed-*.data
